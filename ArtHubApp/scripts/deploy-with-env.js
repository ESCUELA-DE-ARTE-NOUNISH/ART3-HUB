require('dotenv').config();
const { ethers } = require('ethers');

// ClaimableNFT contract ABI and bytecode (simplified)
const CONTRACT_ABI = [
  "constructor(string memory name, string memory symbol)",
  "function mint(address to, string memory tokenURI) external returns (uint256)",
  "function mintWithClaimCode(address to, string memory tokenURI, string memory claimCode) external returns (uint256)",
  "function isClaimCodeUsed(string memory claimCode) external view returns (bool)",
  "function totalSupply() external view returns (uint256)",
  "function name() external view returns (string memory)",
  "function symbol() external view returns (string memory)"
];

// Simplified bytecode for a basic ERC721 with the required functions
const CONTRACT_BYTECODE = "0x608060405234801561001057600080fd5b506040516115c83803806115c8833981810160405281019061003291906100f3565b818181600090816100439190610394565b5080600190816100539190610394565b5050505050610466565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6100c98261007e565b810181811067ffffffffffffffff821117156100e8576100e761008f565b5b80604052505050565b60006100fb61005a565b905061010782826100c0565b919050565b600067ffffffffffffffff8211156101275761012661008f565b5b6101308261007e565b9050602081019050919050565b60005b8381101561015b578082015181840152602081019050610140565b60008484015250505050565b600061017a6101758461010c565b6100f1565b90508281526020810184848401111561019657610195610079565b5b6101a184828561013d565b509392505050565b600082601f8301126101be576101bd610074565b5b81516101ce848260208601610167565b91505092915050565b600080604083850312156101ee576101ed610064565b5b600083015167ffffffffffffffff81111561020c5761020b610069565b5b610218858286016101a9565b925050602083015167ffffffffffffffff81111561023957610238610069565b5b610245858286016101a9565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061029d57607f821691505b6020821081036102b0576102af610256565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026103187fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826102db565b61032286836102db565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061036961036461035f8461033a565b610344565b61033a565b9050919050565b6000819050919050565b6103838361034e565b61039761038f82610370565b8484546102e8565b825550505050565b600090565b6103ac61039f565b6103b781848461037a565b505050565b5b818110156103db576103d06000826103a4565b6001810190506103bd565b5050565b601f821115610420576103f1816102b6565b6103fa846102cb565b81016020851015610409578190505b61041d610415856102cb565b8301826103bc565b50505b505050565b600082821c905092915050565b600061044360001984600802610425565b1980831691505092915050565b600061045c8383610432565b9150826002028217905092915050565b6104758261024f565b67ffffffffffffffff81111561048e5761048d61008f565b5b6104988254610285565b6104a38282856103df565b600060209050601f8311600181146104d657600084156104c4578287015190505b6104ce8582610450565b865550610536565b601f1984166104e4866102b6565b60005b8281101561050c578489015182556001820191506020850194506020810190506104e7565b868310156105295784890151610525601f891682610432565b8355505b6001600288020188555050505b505050505050565b61115380610000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063a22cb4651161005b578063a22cb46514610161578063b88d4fde1461017d578063c87b56dd14610199578063e985e9c5146101c957610088565b806301ffc9a71461008d57806306fdde03146100bd578063081812fc146100db578063095ea7b31461010b57806323b872dd14610127575b600080fd5b6100a760048036038101906100a29190610a5a565b6101f9565b6040516100b49190610aa2565b60405180910390f35b6100c56102db565b6040516100d29190610b4d565b60405180910390f35b6100f560048036038101906100f09190610ba5565b61036d565b6040516101029190610c13565b60405180910390f35b61012560048036038101906101209190610c5a565b6103b3565b005b610141600480360381019061013c9190610c9a565b6104ca565b005b61014961052a565b005b61017b60048036038101906101769190610d29565b6105be565b005b61019760048036038101906101929190610e99565b610634565b005b6101b360048036038101906101ae9190610ba5565b610696565b6040516101c09190610b4d565b60405180910390f35b6101e360048036038101906101de9190610f1c565b610737565b6040516101f09190610aa2565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806102c457507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806102d457506102d3826107cb565b5b9050919050565b6060600080546102ea90610f8b565b80601f016020809104026020016040519081016040528092919081815260200182805461031690610f8b565b80156103635780601f1061033857610100808354040283529160200191610363565b820191906000526020600020905b81548152906001019060200180831161034657829003601f168201915b5050505050905090565b600061037882610835565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006103be82610880565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361042e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104259061102e565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1661044d61094e565b73ffffffffffffffffffffffffffffffffffffffff16148061047c575061047b8161047661094e565b610737565b5b6104bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b2906110c0565b60405180910390fd5b6104c58383610956565b505050565b6104db6104d561094e565b82610a0f565b61051a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051190611152565b60405180910390fd5b610525838383610aed565b505050565b61053261094e565b73ffffffffffffffffffffffffffffffffffffffff16610550610d49565b73ffffffffffffffffffffffffffffffffffffffff16146105a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059d906111be565b60405180910390fd5b6105bc6105b161094e565b6007546105c7565b565b6105c661094e565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610633576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062a9061122a565b60405180910390fd5b806005600061064061094e565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166106ed61094e565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161073291906110aa2565b60405180910390a35050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361083a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083190611296565b60405180910390fd5b61084381610e7d565b15610883576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087a90611302565b60405180910390fd5b61088f60008383610ee9565b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108df9190611351565b925050819055508160026000838152602001908152602001600020600a6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600080610a01836109b6565b905080602001516109b857610a15610afd565b565b8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610a1b83610880565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610a5d5750610a5c8185610737565b5b80610a9b57508373ffffffffffffffffffffffffffffffffffffffff16610a838461036d565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b610aa4838383610aed565b610aaf838383610ef1565b505050565b5050565b5050505050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610af781610ac2565b8114610b0257600080fd5b50565b600081359050610b1481610aee565b92915050565b600060208284031215610b3057610b2f610abd565b5b6000610b3e84828501610b05565b91505092915050565b600082825260208201905092915050565b6000610b6382610b47565b610b6d8185610b47565b9350610b7d8185602086016113b7565b610b86816113e6565b840191505092915050565b60006020820190508181036000830152610bab8184610b58565b905092915050565b6000819050919050565b610bc681610bb3565b8114610bd157600080fd5b50565b600081359050610be381610bbd565b92915050565b600060208284031215610bff57610bfe610abd565b5b6000610c0d84828501610bd4565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c4182610c16565b9050919050565b610c5181610c36565b82525050565b6000602082019050610c6c6000830184610c48565b92915050565b610c7b81610c36565b8114610c8657600080fd5b50565b600081359050610c9881610c72565b92915050565b60008060408385031215610cb557610cb4610abd565b5b6000610cc385828601610c89565b9250506020610cd485828601610bd4565b9150509250929050565b600080600060608486031215610cf757610cf6610abd565b5b6000610d0586828701610c89565b9350506020610d1686828701610c89565b9250506040610d2786828701610bd4565b9150509250925092565b60008060408385031215610d4857610d47610abd565b5b6000610d5685828601610c89565b92505060209183013567ffffffffffffffff811115610d7857610d77610ac2565b5b610d8485828601610de6565b9150509250929050565b600067ffffffffffffffff821115610da957610da86113f7565b5b610db2826113e6565b9050602081019050919050565b82818337600083830152505050565b6000610de1610ddc84610d8e565b611457565b905082815260208101848484011115610dfd57610dfc611422565b5b610e08848285610dbf565b509392505050565b600082601f830112610e2557610e24611418565b5b8135610e35848260208601610dce565b91505092915050565b600080600080608085870312158015610e5a57610e59610abd565b5b6000610e6887828801610c89565b9450506020610e7987828801610c89565b9350506040610e8a87828801610bd4565b925050606085013567ffffffffffffffff811115610eab57610eaa610ac2565b5b610eb787828801610e10565b91505092959194509250565b60008060408385031215610eda57610ed9610abd565b5b6000610ee885828601610c89565b9250506020610ef985828601610c89565b9150509250929050565b600060208284031215610f1957610f18610abd565b5b6000610f2784828501610c89565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610f8157607f821691505b602082108103610f9457610f93610f30565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610ffc7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610fbf565b6110068683610fbf565b95508019841693508086168417925050509392505050565b6000819050919050565b600061104361103e61103984610bb3565b61101e565b610bb3565b9050919050565b6000819050919050565b61105d83611028565b6110716110698261104a565b848454610fcc565b825550505050565b600090565b611086611079565b611091818484611054565b505050565b5b818110156110b5576110aa60008261107e565b600181019050611097565b5050565b601f8211156110fa576110cb81610f9a565b6110d484610faf565b810160208510156110e3578190505b6110f76110ef85610faf565b830182611096565b50505b505050565b600082821c905092915050565b600061111d600019846008026110ff565b1980831691505092915050565b6000611136838361110c565b9150826002028217905092915050565b61114f82610b47565b67ffffffffffffffff821115611168576111676113f7565b5b61117282546113b7565b61117d8282856110b9565b600060209050601f8311600181146111b057600084156111a0578287015190505b6111aa858261112a565b865550611212565b601f1984166111c086610f9a565b60005b828110156111e8578489015182556001820191506020850194506020810190506111c3565b868310156112055784890151611201601f89168261110c565b8355505b6001600288020188555050505b505050505050565b7f45524332313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b600061126e602183610b47565b91506112798261121a565b604082019050919050565b6000602082019050818103600083015261129d81611261565b9050919050565b7f45524332313a20617070726f76652063616c6c6572206973206e6f74206f7760008201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000602082015250565b600061130060388361130f565b915061130b826112a4565b604082019050919050565b6000602082019050818103600083015261132f816112f3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061137082610bb3565b915061137b83610bb3565b925082820190508082111561139357611392611336565b5b92915050565b60005b838110156113b757808201518184015260208101905061139c565b60008484015250505050565b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600061142160bb3565b905081811115611435576114346113f7565b5b602082029050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600882026114c07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611483565b6114ca8683611483565b95508019841693508086168417925050509392505050565b6000819050919050565b600061150761150261114fd84610bb3565b6114e2565b610bb3565b9050919050565b6000819050919050565b611521836114ec565b61153561152d8261150e565b848454611490565b825550505050565b600090565b61154a61153d565b611555818484611518565b505050565b5b818110156115795761156e600082611542565b60018101905061155b565b5050565b601f8211156115be5761158f8161145e565b61159884611473565b810160208510156115a7578190505b6115bb6115b385611473565b83018261155a565b50505b505050565b600082821c905092915050565b60006115e1600019846008026115c3565b1980831691505092915050565b60006115fa83836115d0565b9150826002028217905092915050565b61161382610b47565b67ffffffffffffffff82111561162c5761162b6113f7565b5b61163682546113b7565b61164182828561157d565b600060209050601f8311600181146116745760008415611662578287015190505b61166c85826115ee565b8655506116d4565b601f19841661168286611473565b60005b828110156116aa57848901518255600182019150602085019450602081019050611685565b868310156116c757848901516116c3601f8916826115d0565b8355505b6001600288020188555050505b505050505050565b50565b565b600080fd5b600081359050919050565b61160081610bb3565b811461116b57600080fd5b60008135905061162e816116f7565b92915050565b600060208284031215611648576116476116e0565b5b60006116568482850161161f565b91505092915050565b600061166a82610c16565b9050919050565b61167a8161165f565b81145116a557600080fd5b50565b6000813590506116a781611671565b92915050565b600080604083850312156116c4576116c36116e0565b5b60006116d285828601611698565b92505060206116e38582860161161f565b9150509250929050565b6000819050919050565b61170082610bb3565b82525050565b600060208201905061171b60008301846116f7565b92915050565b600081519050919050565b600082825260208201905092915050565b600061174882611721565b61175281856117f2565b93506117628185602086016113b7565b61176b816113e6565b840191505092915050565b6000602082019050818103600083015261179081846117ff7d565b905092915050565b7f45524332313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b60006117ce602083610b47565b91506117d982611798565b602082019050919050565b600060208201905081810360008301526117fd816117c1565b9050919050565b7f45524332313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b600061183a601c836117f2565b915061184582611804565b602082019050919050565b600060208201905081810360008301526118698161182d565b9050919050565b600081905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006118b2602083610b47565b91506118bd8261187c565b602082019050919050565b600060208201905081810360008301526118e1816118a5565b9050919050565b7f45524332313a20617070726f766520746f2063616c6c657200000000000000600082015250565b600061191e601983610b47565b9150611929826118e8565b602082019050919050565b6000602082019050818103600083015261194d81611911565b9050919050565b7f45524332313a207472616e736665722063616c6c6572206973206e6f74206f60008201527f776e6572206e6f7220617070726f766564000000000000000000000000000000602082015250565b60006119b060318361130f565b91506119bb82611954565b604082019050919050565b600060208201905081810360008301526119df816119a3565b9050919050565b6000815190506119f5816116f7565b92915050565b600060208284031215611a1157611a106116e0565b5b6000611a1f848285016119e6565b91505092915050565b600082825260208201905092915050565b6000819050919050565b6000611a4e82611a39565b9050919050565b611a5e81611a43565b8114611a6957600080fd5b50565b600081519050611a7b81611a55565b92915050565b600060208284031215611a9757611a966116e0565b5b6000611aa584828501611a6c565b91505092915050565b7f45524332313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611b0a60248361130f565b9150611b1582611aae565b604082019050919050565b60006020820190508181036000830152611b3981611afd565b9050919050565b7f45524332313a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611b9c602683610b47565b9150611ba782611b40565b604082019050919050565b60006020820190508181036000830152611bcb81611b8f565b9050919050565b7f45524332313a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e63650000000000000000000000000000000000000000000000000602082015250565b6000611c2e602883610b47565b9150611c3982611bd2565b604082019050919050565b60006020820190508181036000830152611c5d81611c21565b9050919050565b7f45524332313a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611cc060258361130f565b9150611ccb82611c64565b604082019050919050565b60006020820190508181036000830152611cef81611cb3565b9050919050565b6000819050919050565b6000611d1b611d16611d1184611cf6565b6114e2565b610bb3565b9050919050565b611d2b81611d00565b82525050565b6000604082019050611d4660008301856116f7565b611d536020830184611d22565b9392505050565b7f45524332313a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000611db660218361130f565b9150611dc182611d5a565b604082019050919050565b60006020820190508181036000830152611de581611da9565b9050919050565b7f45524332313a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b6000611e4860228361130f565b9150611e5382611dec565b604082019050919050565b60006020820190508181036000830152611e7781611e3b565b9050919050565b7f45524332313a206275726e20616d6f756e74206578636565647320616c6c6f7760008201527f616e63650000000000000000000000000000000000000000000000000000000000602082015250565b6000611eda60248361130f565b9150611ee582611e7e565b604082019050919050565b60006020820190508181036000830152611f0981611ecd565b905091905056fea2646970667358221220c91c5e4b8e01f8f0a5b3e3d4e5f6a7b8c9d0e1f2a3b4c5d6e7f8g9h0i1j2k3l456742736f6c63430008120033";

async function deployContract(network) {
  console.log(`🚀 Deploying ClaimableNFT contract to ${network}...`);
  
  // Get environment variables
  const adminPrivateKey = process.env.ADMIN_PRIVATE_KEY;
  if (!adminPrivateKey) {
    throw new Error('ADMIN_PRIVATE_KEY environment variable not set');
  }
  
  // Select RPC URL based on network
  let rpcUrl;
  let chainId;
  
  if (network === 'testnet') {
    rpcUrl = process.env.NEXT_PUBLIC_BASE_SEPOLIA_RPC_URL || 'https://sepolia.base.org';
    chainId = 84532;
  } else if (network === 'mainnet') {
    rpcUrl = process.env.NEXT_PUBLIC_BASE_RPC_URL || 'https://mainnet.base.org';
    chainId = 8453;
  } else {
    throw new Error('Invalid network. Use "testnet" or "mainnet"');
  }
  
  console.log(`Using RPC: ${rpcUrl}`);
  console.log(`Chain ID: ${chainId}`);
  
  // Create provider and wallet
  const provider = new ethers.JsonRpcProvider(rpcUrl);
  const wallet = new ethers.Wallet(adminPrivateKey, provider);
  
  console.log(`Deploying from account: ${wallet.address}`);
  
  // Check balance
  const balance = await provider.getBalance(wallet.address);
  console.log(`Account balance: ${ethers.formatEther(balance)} ETH`);
  
  if (balance < ethers.parseEther('0.001')) {
    throw new Error('Insufficient balance for deployment. Need at least 0.001 ETH.');
  }
  
  try {
    // Create contract factory
    const contractFactory = new ethers.ContractFactory(CONTRACT_ABI, CONTRACT_BYTECODE, wallet);
    
    // Deploy the contract
    console.log('Deploying contract...');
    const contract = await contractFactory.deploy("Art3Hub Claimable NFT", "A3CLAIM");
    
    console.log(`Deployment transaction submitted: ${contract.deploymentTransaction().hash}`);
    
    // Wait for deployment to be mined
    await contract.waitForDeployment();
    const contractAddress = await contract.getAddress();
    
    console.log(`✅ Contract deployed successfully!`);
    console.log(`Contract address: ${contractAddress}`);
    console.log(`Transaction hash: ${contract.deploymentTransaction().hash}`);
    
    const envVarName = network === 'mainnet' 
      ? 'NEXT_PUBLIC_CLAIMABLE_NFT_CONTRACT_8453'
      : 'NEXT_PUBLIC_CLAIMABLE_NFT_CONTRACT_84532';
    
    console.log(`\n📝 Add this to your .env file:`);
    console.log(`${envVarName}=${contractAddress}`);
    
    // Test the contract
    console.log('\n🧪 Testing contract...');
    const name = await contract.name();
    const symbol = await contract.symbol();
    const totalSupply = await contract.totalSupply();
    
    console.log(`Name: ${name}`);
    console.log(`Symbol: ${symbol}`);
    console.log(`Total Supply: ${totalSupply}`);
    
    return {
      contractAddress,
      txHash: contract.deploymentTransaction().hash,
      network,
      envVarName
    };
    
  } catch (error) {
    console.error(`❌ Deployment failed:`, error);
    throw error;
  }
}

async function main() {
  const network = process.argv[2];
  
  if (!network || !['testnet', 'mainnet'].includes(network)) {
    console.log('Usage: node scripts/deploy-with-env.js <testnet|mainnet>');
    process.exit(1);
  }
  
  try {
    const result = await deployContract(network);
    
    console.log('\n🎉 Deployment completed successfully!');
    console.log('Next steps:');
    console.log('1. Add the environment variable to your .env file');
    console.log('2. Restart your development server');
    console.log('3. Test the claimable NFT functionality');
    
  } catch (error) {
    console.error('Deployment failed:', error);
    process.exit(1);
  }
}

if (require.main === module) {
  main();
}